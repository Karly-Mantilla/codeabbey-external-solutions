let possible_triangle a b c =
  if (a + b) > c && (a + c) > b && (b + c) > a then 1
  else 0;;

let read_lines lines =
  let rec read_lines' lines acc =
    match lines with
    | 0 -> acc
    | _ -> read_lines' (lines - 1) (read_line () :: acc)
  in
  read_lines' lines [] |> List.rev;;

exception UnknownInput of unit

let check_triangles line =
  match line |> String.split_on_char ' ' |> List.map int_of_string with
  | a::b::c::[] -> possible_triangle a b c
  | _ -> raise (UnknownInput ());;

let () =
  let lines = read_line () |> int_of_string in
  read_lines lines |> List.map check_triangles |> List.iter (Printf.printf "%d ");
  print_newline ()