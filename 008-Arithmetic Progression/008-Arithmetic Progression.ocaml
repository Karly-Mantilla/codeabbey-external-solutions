let progress base step times =
  let rec progress' base step times acc =
    match times with
    | 0 -> acc
    | _ ->
      let times' = times - 1 in
      progress' base step times' (acc + base + (times' * step))
  in
  progress' base step times 0;;

let read_lines lines =
  let rec read_lines' lines acc =
    match lines with
    | 0 -> acc
    | _ -> read_lines' (lines-1) (read_line () :: acc)
  in
  read_lines' lines [] |> List.rev;;

exception UnknownInput of unit

let progression l =
  match l |> String.split_on_char ' ' |> List.map int_of_string with
  | base::step::times::[] -> progress base step times
  | _ -> raise (UnknownInput ());;

let () =
  let lines = read_line () |> int_of_string in
  read_lines lines |> List.map progression |> List.iter (Printf.printf "%d ");
  print_newline ()